# Generated by Django 3.1.2 on 2020-10-18 15:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.AutoField(db_index=True, primary_key=True, serialize=False, verbose_name='user id')),
                ('username', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='username')),
                ('fullname', models.CharField(db_index=True, default='', max_length=60, verbose_name='fullname')),
                ('nationality', models.CharField(default='Vietnam', max_length=60, verbose_name='nationality')),
                ('place_of_birth', models.CharField(default='', max_length=255, verbose_name='place of birth')),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now, verbose_name='date of birth')),
                ('address', models.TextField(default='', verbose_name='address')),
                ('phone_number', models.CharField(max_length=20, null=True, verbose_name='phone number')),
                ('cdate', models.DateTimeField(auto_now_add=True, verbose_name='account create time')),
                ('mdate', models.DateTimeField(auto_now=True, verbose_name='account modify time')),
                ('email', models.EmailField(db_index=True, max_length=60, null=True, verbose_name='email address')),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='ChatHistory',
            fields=[
                ('chat_history_id', models.AutoField(primary_key=True, serialize=False, verbose_name='log id')),
                ('log', models.TextField(blank=True, verbose_name='chat history')),
                ('cdate', models.DateTimeField(auto_now_add=True, verbose_name='chat recorded time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='chat user id')),
            ],
            options={
                'db_table': 'chat_history',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeData',
            fields=[
                ('knowledge_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('intent', models.CharField(db_index=True, max_length=50, verbose_name='intent')),
                ('intent_fullname', models.CharField(db_index=True, max_length=255, verbose_name='intent full name')),
                ('base_response', models.TextField(verbose_name='base response')),
                ('status', models.SmallIntegerField(default=0, verbose_name='status')),
                ('raw_data', models.TextField(verbose_name='raw text data')),
                ('cdate', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('mdate', models.DateTimeField(auto_now=True, verbose_name='modified date')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kd_create_user_id', to=settings.AUTH_USER_MODEL, verbose_name='create user')),
                ('edit_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kd_edit_user_id', to=settings.AUTH_USER_MODEL, verbose_name='edit user')),
            ],
            options={
                'db_table': 'knowledge_data',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False, verbose_name='subject id')),
                ('subject_data', models.TextField(verbose_name='subject in the knowledge datas raw sentence')),
                ('knowledge_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.knowledgedata')),
            ],
            options={
                'db_table': 'knowledge_data_subjects',
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('synonym_id', models.AutoField(primary_key=True, serialize=False, verbose_name='synonym id')),
                ('meaning', models.CharField(max_length=50, verbose_name='synonym group main meaning')),
                ('words', models.TextField(verbose_name='words in synonym group')),
            ],
            options={
                'db_table': 'synonyms',
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('setting_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='report id')),
                ('setting_name', models.CharField(max_length=60, verbose_name='setting name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='setting description')),
                ('value', models.TextField(blank=True, null=True, verbose_name='value')),
                ('default', models.TextField(verbose_name='default value')),
                ('cdate', models.DateTimeField(auto_now_add=True, verbose_name='setting created time')),
                ('mdate', models.DateTimeField(auto_now=True, verbose_name='setting modified time')),
            ],
            options={
                'db_table': 'system_settings',
            },
        ),
        migrations.CreateModel(
            name='Verb',
            fields=[
                ('verb_id', models.AutoField(primary_key=True, serialize=False, verbose_name='verb id')),
                ('verb_data', models.TextField(verbose_name='verb belong to subject in the knowledge datas raw sentence')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.subject')),
            ],
            options={
                'db_table': 'knowledge_data_verbs',
            },
        ),
        migrations.CreateModel(
            name='ResponseData',
            fields=[
                ('response_data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='response data id')),
                ('type', models.SmallIntegerField(verbose_name='type of question')),
                ('answer', models.TextField(verbose_name='answer string')),
                ('knowledge_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.knowledgedata')),
            ],
            options={
                'db_table': 'knowledge_data_response_data',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False, verbose_name='report id')),
                ('report_data', models.TextField(null=True, verbose_name='report data')),
                ('type', models.SmallIntegerField(verbose_name='report type')),
                ('status', models.SmallIntegerField(verbose_name='status')),
                ('cdate', models.DateTimeField(auto_now_add=True, verbose_name='report recorded time')),
                ('chat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.chathistory', verbose_name='chat history id')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='RefercenceDocument',
            fields=[
                ('reference_document_id', models.AutoField(primary_key=True, serialize=False, verbose_name='reference document id')),
                ('reference_name', models.CharField(db_index=True, default='', max_length=100, verbose_name='reference name')),
                ('link', models.TextField(blank=True, verbose_name='reference urls')),
                ('cover', models.BinaryField(blank=True, verbose_name='document cover')),
                ('author', models.CharField(db_index=True, default='', max_length=50, verbose_name='document author')),
                ('cdate', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('mdate', models.DateTimeField(auto_now=True, verbose_name='modified date')),
                ('create_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rd_create_user_id', to=settings.AUTH_USER_MODEL, verbose_name='create user')),
                ('last_edit_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rd_last_edit_user_id', to=settings.AUTH_USER_MODEL, verbose_name='last edit user')),
            ],
            options={
                'db_table': 'reference_document',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False, verbose_name='question id')),
                ('question', models.TextField(verbose_name='question')),
                ('knowledge_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.knowledgedata')),
            ],
            options={
                'db_table': 'knowledge_data_question',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeDataSynonymLink',
            fields=[
                ('word', models.TextField(primary_key=True, serialize=False, verbose_name='word thats synonym dict linking with')),
                ('knowledge_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.knowledgedata')),
                ('synonym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.synonym')),
            ],
            options={
                'db_table': 'knowledge_data_synonym_link',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeDataRefercenceDocumentLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.SmallIntegerField(verbose_name='document page number')),
                ('extra_info', models.TextField(verbose_name='extra info on reference document')),
                ('knowledge_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.knowledgedata')),
                ('reference_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.refercencedocument')),
            ],
            options={
                'db_table': 'knowledge_data_reference_document_link',
            },
        ),
        migrations.AddField(
            model_name='knowledgedata',
            name='references',
            field=models.ManyToManyField(through='vhcm.KnowledgeDataRefercenceDocumentLink', to='vhcm.RefercenceDocument'),
        ),
        migrations.AddField(
            model_name='knowledgedata',
            name='synonym',
            field=models.ManyToManyField(through='vhcm.KnowledgeDataSynonymLink', to='vhcm.Synonym'),
        ),
        migrations.CreateModel(
            name='GeneratedQuestion',
            fields=[
                ('generated_question_id', models.AutoField(primary_key=True, serialize=False, verbose_name='generated question id')),
                ('generated_question', models.TextField(verbose_name='generated question')),
                ('accept_status', models.BooleanField(verbose_name='accepted status')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vhcm.question')),
            ],
            options={
                'db_table': 'knowledge_data_generated_question',
            },
        ),
    ]
