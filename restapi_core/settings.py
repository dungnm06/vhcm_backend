"""
Django settings for restapi_core project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path
import datetime

USE_TZ = True
TIME_ZONE = 'Asia/Ho_Chi_Minh'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g7^5)*q^=^#+fib)i$fpiwfzhfso10iqb4#!u@zv8x$j2x-0xi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
USE_DEBUG_TOOLBAR = False

# SECURITY WARNING: App Engine's security features ensure that it is safe to
# have ALLOWED_HOSTS = ['*'] when the app is deployed. If you deploy a Django
# app not on App Engine, make sure to set an appropriate host here.
# See https://docs.djangoproject.com/en/2.1/ref/settings/
ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'vhcm.User'

# CORS
CORS_ORIGIN_ALLOW_ALL = True
# to accept cookies via request
CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_WHITELIST = (
#     'https://127.0.0.1',
#     'https://127.0.0.1:3000',
#     'https://117.6.60.188:3000',
# )
CSRF_TRUSTED_ORIGINS = [
    # React server
    '127.0.0.1',
    'localhost',
    '127.0.0.1:3000',
    'localhost:3000',
    'vhcm.org',
    'vhcm.org:3000'
]
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SAMESITE = 'None'

# JWT
REFRESH_TOKEN_SECRET = 'iweresowrongaboutthis...'

# REST_FRAMEWORK CONFIGS
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        # make all endpoints private
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'vhcm.biz.authentication.jwt_auth.JWTAuthentication',
    ),
    'EXCEPTION_HANDLER': 'vhcm.biz.exception.exception_handler.raise_exception'
}

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "sslserver",
    'corsheaders',
    'rest_framework',
    'vhcm',
    'channels',
    'django_cleanup'
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'vhcm.biz.middleware.VhcmMiddleware'
]

# Websocket
ASGI_APPLICATION = 'restapi_core.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

ROOT_URLCONF = 'restapi_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'restapi_core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASE_PROVIDER = 'postgresql'
if DATABASE_PROVIDER == 'postgresql':
    if os.getenv('GAE_APPLICATION', None):
        # Running on production App Engine, so connect to Google Cloud SQL using
        # the unix socket at /cloudsql/<your-cloudsql-connection string>
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql_psycopg2',
                'HOST': '/cloudsql/vhcm-292513:us-central1:vhcm-psql-us1',
                'USER': 'postgres',
                'PASSWORD': 'uN9pEGKv14yMJB0a',
                'NAME': 'vhcm-db1',
                'OPTIONS': {
                    'sslmode': 'verify-ca',
                    'sslrootcert': os.path.join(BASE_DIR, 'db_cert/server-ca.pem'),
                    'sslcert': os.path.join(BASE_DIR, 'db_cert/client-cert.pem'),
                    'sslkey': os.path.join(BASE_DIR, 'db_cert/client-key.pem'),
                    'options': '-c search_path=vhcm,public'
                }
            }
        }
    else:
        # Normal DB
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql_psycopg2',
                'NAME': 'vhcm-db1',
                'USER': 'postgres',
                'PASSWORD': 'uN9pEGKv14yMJB0a',
                'HOST': '35.224.128.36',
                'PORT': '5432',
                'OPTIONS': {
                    'sslmode': 'verify-ca',
                    'sslrootcert': os.path.join(BASE_DIR, 'db_cert/server-ca.pem'),
                    'sslcert': os.path.join(BASE_DIR, 'db_cert/client-cert.pem'),
                    'sslkey': os.path.join(BASE_DIR, 'db_cert/client-key.pem'),
                    'options': '-c search_path=vhcm,public'
                }
            }
        }

elif DATABASE_PROVIDER == 'sqlite' or DATABASE_PROVIDER == 'sqlite3':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        },
    }
else:
    raise ValueError(f'unsupported DB provider "{DATABASE_PROVIDER}"')

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

USE_I18N = True

USE_L10N = False

DATE_INPUT_FORMATS = ['%d/%m/%Y']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

USE_LOCAL_MEDIA = True
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
